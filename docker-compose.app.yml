services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kira_media_app
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL:-postgresql://kira_user:kira_password_2024@postgres:5432/kira_media}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio}
      - MINIO_PORT=${MINIO_PORT:-9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-kira_minio_user}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-kira_minio_password_2024}
      - MINIO_BUCKET=${MINIO_BUCKET:-kira-media}
      - MINIO_USE_SSL=${MINIO_USE_SSL:-false}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - kira_media_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  # PostgreSQL Database - Primary database for video projects, media metadata, user data
  postgres:
    image: postgres:15-alpine
    container_name: kira_media_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kira_media}
      POSTGRES_USER: ${POSTGRES_USER:-kira_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-kira_password_2024}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS:-"--encoding=UTF8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8"}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
      - ./docker/postgres/backups:/backups
    networks:
      - kira_media_network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-kira_user} -d ${POSTGRES_DB:-kira_media}',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis - For caching, session management, and real-time features
  redis:
    image: redis:7-alpine
    container_name: kira_media_redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - kira_media_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin - Database management interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kira_media_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@kiramedia.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin_password_2024}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE:-'False'}
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: ${PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED:-'False'}
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - kira_media_network
    depends_on:
      postgres:
        condition: service_healthy

  # MinIO - Object storage for video files, thumbnails, and media assets
  minio:
    image: minio/minio:latest
    container_name: kira_media_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-kira_minio_user}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-kira_minio_password_2024}
      MINIO_DOMAIN: ${MINIO_DOMAIN:-localhost}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - kira_media_network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  minio_data:
    driver: local

networks:
  kira_media_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_NETWORK_SUBNET:-172.20.0.0/16}
